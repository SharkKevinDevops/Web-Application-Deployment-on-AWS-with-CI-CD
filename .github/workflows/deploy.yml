name: Deploy to EC2 via SSH
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          aws --version



      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-southeast-1" # Change to your desired region


      - name: Get EC2 Instance Public IPs from ASG
        env:
          AWS_REGION: "ap-southeast-1" # Change to your desired region
          ASG_NAME: "staticwebsite-asg" # Change to your ASG name
        run: |
          INSTANCE_IDS=$(aws autoscaling describe-auto-scaling-groups \
            --auto-scaling-group-names $ASG_NAME \
            --region $AWS_REGION \
            --query "AutoScalingGroups[0].Instances[*].InstanceId" --output text)

          PUBLIC_IPS=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_IDS \
            --region $AWS_REGION \
            --query "Reservations[*].Instances[*].PublicIpAddress" --output text)

          echo "PUBLIC_IPS=${PUBLIC_IPS}" >> $GITHUB_ENV

      - name: Deploy via SSH
        env:
          EC2_KEY: ${{ secrets.EC2_SSH_KEY }}
          USER: "ec2-user"
        run: |
          echo "$EC2_KEY" > key.pem
          chmod 400 key.pem

          for ip in $PUBLIC_IPS; do
            echo "Deploying to $ip..."
            ssh -o StrictHostKeyChecking=no -i key.pem $USER@$ip "sudo rm -rf /usr/share/nginx/html/*"
            scp -i key.pem -r ./index.html $USER@$ip:/usr/share/nginx/html/
          done